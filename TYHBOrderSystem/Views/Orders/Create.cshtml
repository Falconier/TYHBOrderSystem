@model TYHBOrderSystem.Models.Order

@{
				ViewBag.Title = "Create";
}
<head>
				<title>Order Form</title>
				<link href="~/Assets/dist/css/adminlte.min.css" />
				<link href="~/Content/TYHB_Themes/TYHB_Styles.css" rel="stylesheet" />
				<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
				@*<link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />*@
</head>

<h2 class="titleBar">Create New Order</h2>
<br />

@using (Html.BeginForm())
{
				@Html.AntiForgeryToken()

				<div class="form-horizontal">

								@Html.ValidationSummary(true, "", new { @class = "text-danger" })

								<!--Order Details-->
								<h4 class="minorTitleBar">Order Details</h4>
								<hr />

								<!--- Category Type: Add more descriptive name than 'Categories"-->
								<div class="form-group">
												@Html.Label("Choose Item Category", htmlAttributes: new { @class = "control-label col-md-10" })
												<div class="col-md-10">
																@Html.DropDownList("itemchoice", new SelectList(ViewBag.ProductCategoryList, "Id", "Name"))
												</div>
								</div>

								<!-- Dietary Restritions: Format radio button CSS-->
								<div class="form-row">
												<div class="form-group col-md-4">
																@Html.LabelFor(model => model.PRODUCT.Restriction, "Dietary Restriction", htmlAttributes: new { @class = "control-label col-md-10" })
																<div class="form-group col-md-10">
																				@Html.RadioButton("searching", "1", true) Gluten-Free
																				@Html.RadioButton("searching", "2") Keto
																				@Html.RadioButton("searching", "3") Paleo
																</div>
																<input type="submit" class="btn btn-TYHBGreen" value="Search" asp-action="Create" formmethod="get" />
												</div>
								</div>

								<!---Table for Filter Results of 'Radio Buttons'-->
								<table id="orderTable" class="table table-bordered dataTable orderTable">
												<thead>
																<tr>
																				<!--<th scope="col">Product ID</th-->
																				<!--<th scope="col">TypeID</th>-->
																				<!--<th scope="col">RestrictionID</th>-->
																				<!--<th scope="col">Seasonal</th>-->
																				<th>Product Flavor</th>
																				<th>Description</th>
																				<th>Order Item</th>
																</tr>
												</thead>
												<tbody>
																@foreach (var item in ViewBag.DietResitrictionSearch)
																{
																				if (item.Seasonal == true)
																				{
																								//style = "background-color:#c1d867;"
																								<tr style="background-color:#f5d9e1;">
																												<!--<td>*@@item.ProductId</td>-->
																												<!--<td>*@@item.RestrictionId</td>-->
																												<td>@item.Product_Flavor **Seasonal**</td>
																												<td>@item.Product_Description</td>
																												<td><input type="radio" name="chosenID" value="@item.ProductId" /></td>
																								</tr>

																				}
																				else
																				{
																								<tr>
																												<!--<td>*@@item.ProductId</td>-->
																												<!--<td>*@@item.RestrictionId</td>-->
																												<td>@item.Product_Flavor</td>
																												<td>@item.Product_Description</td>
																												<td><input type="radio" name="chosenID" value="@item.ProductId" /></td>
																								</tr>
																				}
																}
												</tbody>
								</table>

								<!-- Ingredient Subsition, Drop Down Box NOTHING IN DB TO USE THIS AT ALL-->
								<div class="form-group">
												@Html.LabelFor(model => model.Ingredient_Substitution, "Ingredient Substitution", htmlAttributes: new { @class = "control-label col-md-10" })
												<div class="col-sm-4">
																@foreach (var ingredient in ViewBag.IngredientSub)
																{
																				<div class="col-md-10">
																								@ingredient.Ingredient_Name
																								<input type="radio" name="substitution" value="@ingredient.Ingredient_ID" />
																				</div>
																}

																@Html.ValidationMessageFor(model => model.Ingredient_Substitution, "", new { @class = "text-danger" })
												</div>
								</div>

								<!-- Decoration Comments && Additional Comments-->
								<div class="form-row">
												<div class="form-group col-md-4">
																@Html.LabelFor(model => model.Decoration_Comments, "Decoration Comments", htmlAttributes: new { @class = "control-label col-md-10" })
																<div class="col-md-10">
																				@Html.TextAreaFor(model => model.Decoration_Comments, 5, 80, htmlAttributes: new { @class = "control-text-area", @style = "resize: none" })
																				@Html.ValidationMessageFor(model => model.Decoration_Comments, "", new { @class = "text-danger" })
																</div>
												</div>
												<div class="form-group col-md-4">
																@Html.LabelFor(model => model.Additional_Comments, "Additional Comments", htmlAttributes: new { @class = "control-label col-md-10" })
																<div class="col-md-10">
																				@Html.TextAreaFor(model => model.Additional_Comments, 5, 80, htmlAttributes: new { @class = "control-text-area", @style = "resize: none" })
																				@Html.ValidationMessageFor(model => model.Additional_Comments, "", new { @class = "text-danger" })
																</div>
												</div>
								</div>

								<!--Primary Key to grab Order_Size_ID-->
								<div class="form-group">
												@Html.LabelFor(model => model.Order_Size_ID, "Order Size", htmlAttributes: new { @class = "control-label col-md-10" })
												<div class="col-md-10">
																@Html.DropDownList("Order_Size_ID", null, htmlAttributes: new { @class = "form-control" })
																@Html.ValidationMessageFor(model => model.Order_Size_ID, "", new { @class = "text-danger" })
												</div>
								</div>

								<br />
								<h4 class="minorTitleBar">Order Information</h4>
								<hr />

								<!--Order Date: DatePicker JS &&& Order Time-->
								<div class="form-row">
												<div class="form-group col-md-4">
																@Html.LabelFor(model => model.Order_Date, "Order Date", htmlAttributes: new { @class = "control-label col-md-10" })
																<div class="col-md-10">
																				@Html.TextBox("CurrentDate", (object)ViewBag.CurrentDate, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
																				@Html.ValidationMessageFor(model => model.Order_Date, "", new { @class = "text-danger" })
																</div>
												</div>
												<div class="form-group col-md-4">
																@Html.LabelFor(model => model.Order_Time, "Order Time", htmlAttributes: new { @class = "control-label col-md-10" })
																<div class="col-md-10">
																				@Html.TextBox("CurrentTime", (object)ViewBag.CurrentTime, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
																				@Html.ValidationMessageFor(model => model.Order_Time, "", new { @class = "text-danger" })
																</div>
												</div>
								</div>

								<!-- Pickup Date: DatePicker JS &&& Pick Up Time-->
								<div class="form-row">
												<div class="form-group col-md-4">
																@Html.LabelFor(model => model.PickUp_Due_Date, "Pick Up Date", htmlAttributes: new { @class = "control-label col-md-10" })
																<div class="col-md-10">
																				@Html.EditorFor(model => model.PickUp_Due_Date, new { htmlAttributes = new { @class = "datepicker col-md-10" } })
																				@Html.ValidationMessageFor(model => model.PickUp_Due_Date, "", new { @class = "text-danger" })
																</div>
												</div>
												<div class="form-group col-md-4">
																@Html.LabelFor(model => model.PickUp_Time, "Pick-Up Time", htmlAttributes: new { @class = "control-label col-md-10" })
																<div class="col-md-10">
																				@Html.EditorFor(model => model.PickUp_Time, new { htmlAttributes = new { @class = "form-control" } })
																				@Html.ValidationMessageFor(model => model.PickUp_Time, "", new { @class = "text-danger" })
																</div>
												</div>
								</div>

								<!-- Employee ID && Customer ID-->
								<div class="form-row">
												<div class="form-group col-md-4">
																@Html.LabelFor(model => model.Employee_ID, "Employee_ID", htmlAttributes: new { @class = "control-label col-md-10" })
																<div class="col-md-10">
																				@Html.DropDownList("Employee_ID", null, htmlAttributes: new { @class = "form-control" })
																				@Html.ValidationMessageFor(model => model.Employee_ID, "", new { @class = "text-danger" })
																</div>
												</div>
												<div class="form-group col-md-4">
																@Html.LabelFor(model => model.Customer_ID, "Customer_ID", htmlAttributes: new { @class = "control-label col-md-10" })
																<div class="col-md-10">
																				@Html.DropDownList("Customer_ID", null, htmlAttributes: new { @class = "form-control" })
																				@Html.ValidationMessageFor(model => model.Customer_ID, "", new { @class = "text-danger" })
																</div>
												</div>
								</div>

								<!---TESTING VALIDATE WITH BUTTON
								<input type="button" value="testing" id="test" />-->

								<div class="form-group">
												<div class="col-md-offset-2 col-md-10">
																<input type="submit" value="Create" class="btn btn-TYHBGreen" />
												</div>
								</div>
				</div>

}

<div>
				@Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
				@Scripts.Render("~/bundles/jqueryval")

				<script src="~/Assets/plugins/datatables/jquery.dataTables.min.js"></script>
				<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

				<script>
								$(function chooseDate() {

												$(".datepicker").datepicker({
																dateFormat: "mm/dd/yy", //format date (For some reason when doing 'mm-dd-yyyy' it's outputting the year 'twice')
																changeMonth: true,
																changeYear: true,
																yearRange: "-1: +5", //year range, -1 (2019) until 5 years from 2020
																showOn: "both",
																buttonText: "<i class='fa fa-calendar'></i>" //name in ' ' is file name from bootstrap css
												})
								});
								$(function () {
												$('.orderTable').dataTable(
																{
																				'paging': true,
																				'lengthChange': false,
																				'pageLength': 10,
																				'searching': true,
																				'ordering': true,
																				'info': false,
																				'autoWidth': false
																})
								});
				</script>
}


