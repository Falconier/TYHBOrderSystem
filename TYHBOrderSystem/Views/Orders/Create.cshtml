@model TYHBOrderSystem.Models.Order

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Order</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <!--Customer ID # Should be prepopulated by DB-->
    <div class="form-group">
        @Html.LabelFor(model => model.Customer_ID, "Customer_ID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Customer_ID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Customer_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <!--Order Date, (MM/DD/YYYY) REGEX POSSIBLE for input validation?-->
    <div class="form-group">
        @Html.LabelFor(model => model.Order_Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Order_Date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Order_Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <!--Order Time: AM/PM 12hr, REGEX PATTERN-->
    <div class="form-group">
        @Html.LabelFor(model => model.Order_Time, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Order_Time, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Order_Time, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Pickup Date: (MM/DD/YYYY) REGEX POSSIBLE -->
    <div class="form-group">
        @Html.LabelFor(model => model.PickUp_Due_Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PickUp_Due_Date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PickUp_Due_Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <!--Pick Up Time: AM/PM 12hr, REGEX PATTERN-->
    <div class="form-group">
        @Html.LabelFor(model => model.PickUp_Time, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PickUp_Time, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PickUp_Time, "", new { @class = "text-danger" })
        </div>
    </div>

    <!--INT: Product Type ID specifies the product type for 'filtering'-->
    <div class="form-group">
        @Html.LabelFor(model => model.Product_Type_ID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Product_Type_ID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Product_Type_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Ingredient Subsition, Drop Down Box-->
    <div class="form-group">
        @Html.LabelFor(model => model.Ingredient_Substitution, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Ingredient_Substitution, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ingredient_Substitution, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Decoration Comments STRING-->
    <div class="form-group">
        @Html.LabelFor(model => model.Decoration_Comments, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Decoration_Comments, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Decoration_Comments, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Additional Comments: Changes to cake flavor/icing-->
    <div class="form-group">
        @Html.LabelFor(model => model.Additional_Comments, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Additional_Comments, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Additional_Comments, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Employee ID may not be needed in Order View (*at remove comments razor)
    <div class="form-group">
            *@@Html.LabelFor(model => model.Employee_ID, "Employee_ID", htmlAttributes: new { *@@class = "control-label col-md-2" })
        <div class="col-md-10">
            *@@Html.DropDownList("Employee_ID", null, htmlAttributes: new { *@@class = "form-control" })
            *@@Html.ValidationMessageFor(model => model.Employee_ID, "", new { *@@class = "text-danger" })
        </div>
    </div>
    -->
    <!--Primary Key to grab 'Num_Layers' or Other keys-->
    <div class="form-group">
        @Html.LabelFor(model => model.Order_Size_ID, "Order_Size_ID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Order_Size_ID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Order_Size_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- May not need Finishing_ID, commenting out for not needed for input, may need if table is still in use
    <div class="form-group">
        *@@Html.LabelFor(model => model.Finishing_ID, htmlAttributes: new { *@@class = "control-label col-md-2" })
        <div class="col-md-10">
            *@@Html.EditorFor(model => model.Finishing_ID, new { htmlAttributes = new { *@@class = "form-control" } })
            *@@Html.ValidationMessageFor(model => model.Finishing_ID, "", new { *@@class = "text-danger" })
        </div>
    </div>
    -->
    <!-- Ingredient_ID no longer needed, Tables have been removed
    <div class="form-group">
        *@@Html.LabelFor(model => model.Ingredient_ID, "Ingredient_ID", htmlAttributes: new { *@@class = "control-label col-md-2" })
        <div class="col-md-10">
            *@@Html.DropDownList("Ingredient_ID", null, htmlAttributes: new { *@@class = "form-control" })
            *@@Html.ValidationMessageFor(model => model.Ingredient_ID, "", new { *@@class = "text-danger" })
        </div>
    </div>
        -->

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
