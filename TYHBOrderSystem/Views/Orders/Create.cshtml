@model TYHBOrderSystem.Models.Order

@{
    ViewBag.Title = "Create";
}
<head>
    <title>Order Form</title>
    <link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
</head>

<h2>Create New Order</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!--Customer First Name-->
        <div class="form-group">
            @Html.LabelFor(model => model.CUSTOMER.Customer_First_Name, "First Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CUSTOMER.Customer_First_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CUSTOMER.Customer_First_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--Customer Last Name-->
        <div class="form-group">
            @Html.LabelFor(model => model.CUSTOMER.Customer_Last_Name, "Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CUSTOMER.Customer_Last_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CUSTOMER.Customer_Last_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Primary Phone Number REGEX?-->
        <div class="form-group">
            @Html.LabelFor(model => model.CUSTOMER.Contact_Number, "Primary Contact Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CUSTOMER.Contact_Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CUSTOMER.Contact_Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Alternate Phone Number-->
        <div class="form-group">
            @Html.LabelFor(model => model.CUSTOMER.Alternate_Contact_Number, "Alternate Contact Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CUSTOMER.Alternate_Contact_Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CUSTOMER.Alternate_Contact_Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Email Address -->
        <div class="form-group">
            @Html.LabelFor(model => model.CUSTOMER.Email_Address, "Email Address", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CUSTOMER.Email_Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CUSTOMER.Email_Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--Customer ID # Should be prepopulated by DB-->
        <div class="form-group">
            @Html.LabelFor(model => model.Customer_ID, "Customer_ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Customer_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Customer_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--Order Date, (MM/DD/YYYY) REGEX POSSIBLE for input validation?-->
        <div class="form-group">
            @Html.LabelFor(model => model.Order_Date, "Order Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Order_Date, new { htmlAttributes = new { @class ="datepicker"} })
                @Html.ValidationMessageFor(model => model.Order_Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--Order Time: AM/PM 12hr, REGEX PATTERN-->
        <div class="form-group">
            @Html.LabelFor(model => model.Order_Time, "Order Time", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Order_Time, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Order_Time, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Pickup Date: (MM/DD/YYYY) REGEX POSSIBLE -->
        <div class="form-group">
            @Html.LabelFor(model => model.PickUp_Due_Date, "Pick Up Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PickUp_Due_Date, new { htmlAttributes = new { @class ="datepicker"} })
                @Html.ValidationMessageFor(model => model.PickUp_Due_Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--Pick Up Time: AM/PM 12hr, REGEX PATTERN-->
        <div class="form-group">
            @Html.LabelFor(model => model.PickUp_Time, "Pick-Up Time", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PickUp_Time, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PickUp_Time, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--INT: Product Type ID specifies the product type for 'filtering'
            Product_Type_ID Key removed from DB: it is not needed CW 3_16
        <div class="form-group">
            *@@Html.LabelFor(model => model.Product_Type_ID, htmlAttributes: new { *@@class = "control-label col-md-2" })
            <div class="col-md-10">
                *@@Html.EditorFor(model => model.Product_Type_ID, new { htmlAttributes = new { *@@class = "form-control" } })
                *@@Html.ValidationMessageFor(model => model.Product_Type_ID, "", new { *@@class = "text-danger" })
            </div>
        </div>
        -->

        <!--- Category Type: Add more descriptive name than 'Categories"-->
        <div class="form-group">
            @Html.Label("Choose Item Category")
            <div class="col-md-10">
                @Html.DropDownList("Item Options", ViewBag.ProductCategoryList as SelectList)
            </div>
        </div>


        <!-- Ingredient Subsition, Drop Down Box-->
        <div class="form-group">
            @Html.LabelFor(model => model.Ingredient_Substitution, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ingredient_Substitution, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ingredient_Substitution, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Decoration Comments STRING-->
        <div class="form-group">
            @Html.LabelFor(model => model.Decoration_Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Decoration_Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Decoration_Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Additional Comments: Changes to cake flavor/icing-->
        <div class="form-group">
            @Html.LabelFor(model => model.Additional_Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Additional_Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Additional_Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Employee ID may not be needed in Order View (WILL BE NEEDED)-->
        <div class="form-group">
            @Html.LabelFor(model => model.Employee_ID, "Employee_ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Employee_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Employee_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--Primary Key to grab 'Num_Layers' or Other keys-->
        <div class="form-group">
            @Html.LabelFor(model => model.Order_Size_ID, "Order_Size_ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Order_Size_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Order_Size_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- May not need Finishing_ID, commenting out for not needed for input, may need if table is still in use
        <div class="form-group">
            *@@Html.LabelFor(model => model.Finishing_ID, htmlAttributes: new { *@@class = "control-label col-md-2" })
            <div class="col-md-10">
                *@@Html.EditorFor(model => model.Finishing_ID, new { htmlAttributes = new { *@@class = "form-control" } })
                *@@Html.ValidationMessageFor(model => model.Finishing_ID, "", new { *@@class = "text-danger" })
            </div>
        </div>
        -->
        <!-- Ingredient_ID no longer needed, Tables have been removed
        <div class="form-group">
            *@@Html.LabelFor(model => model.Ingredient_ID, "Ingredient_ID", htmlAttributes: new { *@@class = "control-label col-md-2" })
            <div class="col-md-10">
                *@@Html.DropDownList("Ingredient_ID", null, htmlAttributes: new { *@@class = "form-control" })
                *@@Html.ValidationMessageFor(model => model.Ingredient_ID, "", new { *@@class = "text-danger" })
            </div>
        </div>
            -->

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

    <script>
        $(function chooseDate() {

            $(".datepicker").datepicker({

                dateFormat: "mm-dd-yy", //format date (For some reason when doing 'mm-dd-yyyy' it's outputting the year 'twice')
                changeMonth: true, 
                changeYear: true, 
                yearRange: "-1: +5", //year range, -1 (2019) until 5 years from 2020
                showOn: "both",
                buttonText: "<i class='fa fa-calendar'></i>" //name in ' ' is file name from bootstrap css
            });
        });

    </script>
}
