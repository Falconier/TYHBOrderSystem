@model IEnumerable<TYHBOrderSystem.Models.Order>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>



<form asp-controller="Data" asp-action="Index" method="get">
    <p>
        Search: <input type="text" name="SearchString">
        <input type="submit" value="Filter" />
    </p>
</form>


<table id="InformationTable" class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Order_Date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PickUp_Due_Date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Finishing_ID)
        </th>
        <!--
        <th>
        Html.DisplayNameFor(model => model.Product_Type_ID)
        </th>
        -->
        <th>
            @Html.DisplayNameFor(model => model.ORDER_SIZES.Product_Type_ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CUSTOMER.Customer_First_Name)
        </th>

    </tr>




    @if (Model.Count() > 0)
    {

        foreach (var item in Model)
        {

            <tr>
                <td>
                    @Html.DisplayFor(model => item.Order_Date)
                </td>
                <td>
                    @Html.DisplayFor(model => item.PickUp_Due_Date)
                </td>
                <td>
                    @Html.DisplayFor(model => item.Finishing_ID)
                </td>
                <!--
                <th>
                Html.DisplayFor(model => model.Product_Type_ID)
                </th>
                -->
                <td>
                    @Html.DisplayFor(model => item.ORDER_SIZES.Product_Type_ID)
                </td>
                <td>
                    @Html.DisplayFor(model => item.CUSTOMER.Customer_First_Name)
                </td>
            </tr>
        }
    }
    else
    //ill put out a more stylized response to no data below in the near future
    {
        <h2>Data not found!</h2>
    }

